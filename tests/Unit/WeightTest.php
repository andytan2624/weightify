<?php

namespace Tests\Unit;

use App\User;
use App\WeightRecord;
use Carbon\Carbon;
use Illuminate\Support\Facades\Artisan;
use TestCase;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Foundation\Testing\DatabaseTransactions;

class WeightTest extends TestCase
{
    use DatabaseTransactions;

    protected $user;
    protected $userRepository;
    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        Artisan::call('migrate');
        Artisan::call('db:seed', ['--class' => 'TestSeeder', '--database' => 'testing']);
        $this->user = User::find(1);
        $this->userRepository = new UserRepository();
    }

    public function tearDown()
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    /**
     * A basic test example.
     *
     * @return void
     */
    public function testExample()
    {
        $this->assertTrue(true);
    }

    /** @test */
    public function test_database_was_seeded()
    {
        $this->assertCount(1, User::all());
    }

    /** @test */
    public function be_able_to_record_weight()
    {
        $weight_record = $this->userRepository->saveWeight($this->user->id, 68.5);
        $this->assertInstanceOf('App\WeightRecord', $weight_record);
    }

    /** @test */
    public function invalidate_record_weight_not_float_or_integer()
    {
        $weight_record = $this->userRepository->saveWeight($this->user->id, 'dfsdfdsfds');
        $this->assertFalse($weight_record);
    }

    /** @test */
    public function check_weight_for_day_is_recorded_correctly()
    {
        $weight_record = $this->userRepository->saveWeight($this->user->id, 68.5);
        $this->assertEquals(68.5, $weight_record->weight);
    }

    /** @test */
    public function be_able_edit_weight_score()
    {
        $weight_record = $this->userRepository->saveWeight($this->user->id, 68.5);
        $this->userRepository->editWeight($weight_record->id, 65);
        $this->assertEquals(65, $weight_record->weight);
    }

    /** @test */
    public function be_able_to_get_weight_between_dates()
    {
        factory(WeightRecord::class,50)->create();
        $records = $this->userRepository->getWeightDateRange(Carbon::now()->subWeek(1), Carbon::now());
        $this->assertCount(50, count($records));

    }
}
